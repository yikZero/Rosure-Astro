---
import Layout from '@/layouts/Layout.astro';
import Star from '@/icons/star.astro';
import LinkCard from '@/components/link-card.astro';
import { type Link } from '@/lib/types';

const response = await fetch('https://api.yikzero.com/rosure/links');
const allLinks: Link[] = await response.json();

const favoriteLinks = allLinks.filter((link) => link.isFavorite);

const linksByCategory = allLinks.reduce<Record<string, Link[]>>((acc, link) => {
  if (!acc[link.category]) {
    acc[link.category] = [];
  }
  acc[link.category].push(link);
  return acc;
}, {});

const categoriesArray: { name: string; links: Link[] }[] = Object.entries(
  linksByCategory,
).map(([name, links]) => ({
  name,
  links,
}));
---

<Layout title="Rosure - Hamster Plan" activeSidebarId="all">
  {
    favoriteLinks.length > 0 && (
      <div class="mb-8">
        <h2 class="sticky top-[7.375rem] z-10 flex select-none flex-row gap-1 text-base font-semibold text-tertiary mix-blend-difference sm:text-lg md:top-16 dark:text-primary">
          <Star class="size-4 self-center text-brand-600 dark:text-brand-500" />{' '}
          Favorites
        </h2>
        <div class="mt-4 grid grid-cols-2 gap-4 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5">
          {favoriteLinks.map((link) => (
            <LinkCard link={link} />
          ))}
        </div>
      </div>
    )
  }
  <div class="space-y-8">
    {
      categoriesArray.map((category) => (
        <div>
          <h2 class="sticky top-[7.375rem] z-10 select-none text-base font-semibold text-tertiary mix-blend-difference sm:text-lg md:top-16 dark:text-primary">
            {category.name}
          </h2>
          <div class="mt-4 grid grid-cols-2 gap-4 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5">
            {category.links.map((link) => (
              <LinkCard link={link} />
            ))}
          </div>
        </div>
      ))
    }
  </div>
</Layout>
