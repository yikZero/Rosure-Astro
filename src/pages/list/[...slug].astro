---
import Layout from '@/layouts/Layout.astro';
import LinkCard from '@/components/link-card.astro';
import { type Link, type Category } from '@/lib/types';

export async function getStaticPaths() {
  async function getAllCategories(): Promise<Category[]> {
    const response = await fetch('https://api.yikzero.com/rosure/categories');
    return await response.json();
  }

  async function getAllLinks(): Promise<Link[]> {
    const response = await fetch('https://api.yikzero.com/rosure/links');
    return await response.json();
  }

  const allCategories = await getAllCategories();
  const allLinks = await getAllLinks();

  return allCategories.map((category) => {
    const categoryLinks = allLinks.filter(
      (link) => link.category === category.name,
    );
    return {
      params: { slug: category.name.toLowerCase() },
      props: { category, categoryLinks },
    };
  });
}

interface Props {
  category: Category;
  categoryLinks: Link[];
}

const { category, categoryLinks } = Astro.props;
const { slug } = Astro.params;

if (!category) return Astro.redirect('/404');
---

<Layout title={`${category.name} Library - Rosure`} activeSidebarId={slug}>
  <div
    class="grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5"
  >
    {categoryLinks.map((link) => <LinkCard link={link} />)}
  </div>
</Layout>
