---
import '@/styles/globals.css';

import Header from '@/components/header.astro';
import Footer from '@/components/footer.astro';
import Sidebar from '@/components/sidebar.astro';

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="Collection of Icons, Fonts, Libraries, etc."
    />
    <meta
      name="keywords"
      content="Rosure,Collection,Icons,Fonts,Libraries,yikZero,Design"
    />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: light)"
      content="#FCFCFC"
    />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: dark)"
      content="#131516"
    />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <>
    <Header />
    <main class="flex-1">
      <div
        class="flex-1 items-start md:grid md:grid-cols-[13rem_minmax(0,1fr)] lg:grid-cols-[13rem_minmax(0,1fr)]"
      >
        <Sidebar />
        <div class="relative min-h-full p-4 md:p-8"><slot /></div>
      </div>
    </main>
    <Footer />
  </>

  <script is:inline>
    const getThemePreference = () => {
      if (
        typeof localStorage !== 'undefined' &&
        localStorage.getItem('theme')
      ) {
        return localStorage.getItem('theme');
      }
      return window.matchMedia('(prefers-color-scheme: dark)').matches
        ? 'dark'
        : 'light';
    };
    const isDark = getThemePreference() === 'dark';
    document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

    if (typeof localStorage !== 'undefined') {
      const observer = new MutationObserver(() => {
        const isDark = document.documentElement.classList.contains('dark');
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
      });
      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ['class'],
      });
    }
  </script>
</html>
